<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Spring Boot项目的核心父项目依赖 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.13</version>
    </parent>

    <groupId>com.hxl</groupId>
    <artifactId>SpringBoot3</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>demo01-common-annotation</module>
    </modules>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <!-- TODO: 当引入了spring-boot-starter-parent依赖后
          对于已被管理依赖版本的，通常不需要在下面管理了，如果管理，则必须指定新的版本号！
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
            </dependency>
          如果向上面那样不指定版本号，则子模块会优先从手动管理的里面获取依赖，此时发现这个依赖没有指定版本
          从而导致子模块无法下载依赖(手动指定的无版本覆盖了SpringBoot自动管理的版本！)
     -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>in.hocg.boot</groupId>
                <artifactId>mybatis-plus-spring-boot-starter</artifactId>
                <version>1.0.61</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>1.18.30</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>1.2.24</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- Spring Boot 提供的Maven测试 -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>